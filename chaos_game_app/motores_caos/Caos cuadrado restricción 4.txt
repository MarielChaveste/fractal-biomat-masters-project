// Caos cuadrado restricci√≥n 4
let frameCount = 0;
let points = [];
let current;
let factor = 0.5;
let prevIndex;


function setup() {
  createCanvas(700, 700);
  
  // Define the vertices of the square
  points.push(createVector(0, height));       // Top-left corner
  points.push(createVector(width, height));      // Top-right corner
  points.push(createVector(width, 0));     // Bottom-right corner
  points.push(createVector(0,0));      // Bottom-left corner
  
  // Start at a random point inside the square
  current = createVector(random(width), random(height));
  stroke(255);
  strokeWeight(2);
  background(0);
  
  // Draw the vertices of the square
  for (let pt of points) {
    point(pt.x, pt.y);
  }
  // Initialize the previous index as a random starting point
  prevIndex = floor(random(points.length));
  
}

function draw() {
  if (frameCount < 300) {
    for (let i = 0; i < 100; i++) {
      let nextIndex;

      // Pick a random vertex that is not the same as the previous one
      do {
      // Pick a random vertex, but not two places away from the previous one
      nextIndex = floor(random(points.length));
    } while (abs(nextIndex - prevIndex) === 2);
    
    // Get the selected vertex
    let next = points[nextIndex];
    
    // Move halfway towards the chosen vertex
    current.x = lerp(current.x, next.x, factor);
    current.y = lerp(current.y, next.y, factor);
    
    // Draw the new point
    strokeWeight(1);
    ellipse(current.x, current.y, 1, 1);
    
    // Update the previous index to the current one
    prevIndex = nextIndex;
    }
    frameCount++;
  }
}
