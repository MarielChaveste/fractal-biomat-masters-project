// Caos cuadrado restricci√≥n 3

let points = [];
let current;
let factor = 0.5;
let prevIndex = -1;
let frameCount = 0;

function setup() {
  createCanvas(700, 700);
  
  // Define the vertices of the square
  points.push(createVector(0, height));       // Top-left corner
  points.push(createVector(width, height));      // Top-right corner
  points.push(createVector(width, 0));     // Bottom-right corner
  points.push(createVector(0,0));      // Bottom-left corner
  
  // Start at a random point inside the square
  current = createVector(random(width), random(height));
  stroke(255);
  strokeWeight(2);
  background(0);
  
  // Draw the vertices of the square
  for (let pt of points) {
    point(pt.x, pt.y);
  }
}

function draw() {
  if (frameCount < 400) {
    for (let i = 0; i < 100; i++) {
      let nextIndex;

      // Keep choosing a random vertex until it is not the counterclockwise one
      do {
        nextIndex = floor(random(points.length));
      } while (nextIndex === (prevIndex + 1) % points.length);

      let next = points[nextIndex];

      // Move halfway towards the chosen vertex
      current.x = lerp(current.x, next.x, factor);
      current.y = lerp(current.y, next.y, factor);

      // Draw the new point
      strokeWeight(1);
      ellipse(current.x, current.y, 0.5, 0.5);

      // Update the previous index
      prevIndex = nextIndex;
    }
    frameCount++;
  }
}
